<Window x:Class="SeriesB3.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:SeriesB3.Converters"
        xmlns:extenders="clr-namespace:SeriesB3.Extenders"
        Title="MainWindow" Width="500" WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize" SizeToContent="Height"
        >

    <Window.Resources>
        <converters:BooleanToVisibilityConverterReverse x:Key="BooleanToVisibilityConverterReverse"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid IsEnabled="{Binding InProcessing, Converter={StaticResource BooleanToVisibilityConverterReverse}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel>
                <TextBlock Text="Séries Históricas b3" FontSize="25" HorizontalAlignment="Center"/>
            </StackPanel>

            <StackPanel Grid.Row="1" Margin="0,10,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Arquivo com séries históricas b3"/>
                    <TextBlock Style="{StaticResource TextBlockLink}" Text="Baixar" MouseLeftButtonDown="TextBlock_MouseLeftButtonDown" Grid.Column="1"/>
                </Grid>
                <Grid Margin="0,0,0,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox x:Name="txtFile" Text="{Binding FileB3, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" ToolTip="Arquivo baixado do site da b3"/>
                    <Button Grid.Column="1" Content="..." Width="30" Click="ChooseFile_Click"/>
                </Grid>

                <CheckBox Content="Filtrar por Código de Negociação" ToolTip="Marque está opção para extrair dados somente dos Código de Negociação informado" IsChecked="{Binding ByCodneg}"/>
                <TextBox x:Name="txtAtivs" Height="50" TextWrapping="Wrap" CharacterCasing="Upper" IsEnabled="{Binding ByCodneg}" ToolTip="Informe o Código de Negociação delimitador por ';' que deseja filtrar"
                         Text="{Binding FilterCodneg, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True"/>

                <GroupBox Margin="0,5,0,0">
                    <GroupBox.Header>
                        <extenders:RadioButtonEnum x:Name="rdToCsv" Content="CSV" GroupName="raSend" EnumBinding="{Binding ToType}" EnumValue="ToCsv" IsChecked="True"/>
                    </GroupBox.Header>
                    <StackPanel IsEnabled="{Binding ElementName=rdToCsv, Path=IsChecked}">
                        <CheckBox Content="Gerar CSV separado para cada Código de Negocaição" IsChecked="{Binding CsvSeparated}"/>
                    </StackPanel>
                </GroupBox>

                <GroupBox Margin="0,5,0,0">
                    <GroupBox.Header>
                        <extenders:RadioButtonEnum x:Name="radSql" Content="Microsoft SQL Server" GroupName="raSend" EnumBinding="{Binding ToType}" EnumValue="ToSql"/>
                    </GroupBox.Header>

                    <StackPanel IsEnabled="{Binding ElementName=radSql, Path=IsChecked}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Connection String"/>
                            <TextBlock Text="Remover todas as tabelas do banco" Grid.Column="1" Style="{StaticResource TextBlockLink}" ToolTip="Deleta todas as tabelas do banco de dados" MouseLeftButtonDown="ClearDatabase_Click"/>
                        </Grid>
                        <TextBox x:Name="txtConnectionString" Text="{Binding ConnectionString, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Content="Limpa tabela antes de salvar os dados" Margin="0,5,0,0" IsChecked="{Binding DropTable}" ToolTip="Exclui todos os dados existentes antes de salvar os novos"/>
                        <CheckBox Content="Salvar em tabela separada para cada Código de Negociação" IsChecked="{Binding IsTableSeparated, UpdateSourceTrigger=PropertyChanged}"
                              Margin="0,5"  ToolTip="Cria uma tabela para cada Código de Negociação e salva os dados separadamente em cada tabela"/>
                        <TextBlock Text="Tabela"/>
                        <TextBox x:Name="txtTable" Text="{Binding Table, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsTableSeparated, Converter={StaticResource BooleanToVisibilityConverterReverse}}"
                             ToolTip="Nome da tabela onde será salvo todos os registros"/>
                    </StackPanel>
                </GroupBox>
            </StackPanel>

            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                <Button Height="20" Width="250" Content="Gerar" Click="Execute_Click"/>
            </StackPanel>
        </Grid>

        <TextBlock Grid.Row="1" Text="Processando, aguarde ..." FontSize="15" Foreground="DarkGreen" FontWeight="Bold" Visibility="{Binding InProcessing, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
</Window>